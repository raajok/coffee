{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["WaterInput","props","handleChange","bind","e","this","onWaterChange","target","value","FormControl","className","variant","sx","m","mt","width","for","Input","id","type","water","onChange","endAdornment","InputAdornment","position","React","Component","Measures","onMeasureChange","component","FormLabel","RadioGroup","row","defaultValue","name","FormControlLabel","control","Radio","label","CalculationButton","Button","onClick","onCalculationClick","App","handleMeasureChange","handleWaterChange","handleCalculationClick","state","measure","calculation","currentMeasure","setState","currentWater","answer","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAeMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,aAAe,EAAKA,aAAaC,KAAlB,gBAHH,E,gDAMnB,SAAaC,GACXC,KAAKJ,MAAMK,cAAcF,EAAEG,OAAOC,S,oBAGpC,WACE,OACI,eAACC,EAAA,EAAD,CAAaC,UAAU,aAAaC,QAAQ,WAAWC,GAAI,CAAEC,EAAG,EAAGC,GAAI,EAAGC,MAAO,QAAjF,UACE,uBAAOC,IAAI,QAAX,wCACA,cAACC,EAAA,EAAD,CACEL,GAAI,CAAEG,MAAO,QACbG,GAAG,QACHC,KAAK,SACLX,MAAOH,KAAKJ,MAAMmB,MAClBC,SAAUhB,KAAKH,aACfoB,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,yB,GArBDC,IAAMC,WA4BzBC,E,kDACJ,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,aAAe,EAAKA,aAAaC,KAAlB,gBAHH,E,gDAMnB,SAAaC,GACXC,KAAKJ,MAAM2B,gBAAgBxB,EAAEG,OAAOC,S,oBAGtC,WACE,OACE,eAACC,EAAA,EAAD,CAAaoB,UAAU,WAAvB,UACE,cAACC,EAAA,EAAD,CAAWD,UAAU,SAArB,6BACA,eAACE,EAAA,EAAD,CACEC,KAAG,EACH,aAAW,QACXC,aAAc,EACdC,KAAK,sBACLb,SAAUhB,KAAKH,aALjB,UAOE,cAACiC,EAAA,EAAD,CAAkB3B,MAAO,EAAG4B,QAAS,cAACC,EAAA,EAAD,IAAWC,MAAM,OACtD,cAACH,EAAA,EAAD,CAAkB3B,MAAO,GAAI4B,QAAS,cAACC,EAAA,EAAD,IAAWC,MAAM,QACvD,cAACH,EAAA,EAAD,CAAkB3B,MAAO,GAAI4B,QAAS,cAACC,EAAA,EAAD,IAAWC,MAAM,QACvD,cAACH,EAAA,EAAD,CAAkB3B,MAAO,GAAI4B,QAAS,cAACC,EAAA,EAAD,IAAWC,MAAM,kB,GAzB1Cb,IAAMC,WAgCvBa,E,4JACJ,WACE,OACE,cAACC,EAAA,EAAD,CAAQ7B,QAAQ,YAAY8B,QAASpC,KAAKJ,MAAMyC,mBAAhD,4B,GAH0BjB,IAAMC,WAiDvBiB,E,kDAxCb,WAAY1C,GAAQ,IAAD,8BACjB,cAAMA,IAED2C,oBAAsB,EAAKA,oBAAoBzC,KAAzB,gBAC3B,EAAK0C,kBAAoB,EAAKA,kBAAkB1C,KAAvB,gBACzB,EAAK2C,uBAAyB,EAAKA,uBAAuB3C,KAA5B,gBAC9B,EAAK4C,MAAQ,CAACC,QAAS,EAAG5B,MAAO,GAAI6B,YAAa,GANjC,E,uDASnB,SAAoBC,GAClB7C,KAAK8C,SAAS,CAACH,QAASE,M,+BAG1B,SAAkBE,GAChB/C,KAAK8C,SAAS,CAAC/B,MAAOgC,M,oCAGxB,WACE,IA3FuBJ,EAAS5B,EA2F1BiC,GA3FiBL,EA2FU3C,KAAK0C,MAAMC,QA3FZ5B,EA2FqBf,KAAK0C,MAAM3B,MA1F3DkC,KAAKC,MAAQ,IAAMnC,EAAS4B,EAAW,KAAO,KA2FnD3C,KAAK8C,SAAS,CAACF,YAAaI,M,oBAG9B,WACE,IAAMjC,EAAQf,KAAK0C,MAAM3B,MACnB6B,EAAc5C,KAAK0C,MAAME,YAE/B,OACE,qBAAKvC,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACE,mDACA,cAAC,EAAD,CAAUkB,gBAAiBvB,KAAKuC,sBAChC,cAAC,EAAD,CAAYxB,MAAOA,EAAOd,cAAeD,KAAKwC,oBAC9C,cAAC,EAAD,CAAmBH,mBAAoBrC,KAAKyC,yBAC5C,2CAAcG,EAAd,iC,GAlCQxB,IAAMC,WCvET8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.99fd9f7c.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { Button } from '@mui/material';\nimport { FormControl } from '@mui/material';\nimport { FormControlLabel } from '@mui/material';\nimport { FormLabel } from '@mui/material';\nimport { Radio } from '@mui/material';\nimport { RadioGroup } from '@mui/material';\nimport { Input } from '@mui/material';\nimport { InputAdornment } from '@mui/material';\n\nfunction coffeeCalculation(measure, water) {\n  return Math.round(((5.6 * water) / measure) * 100) / 100;\n}\n\nclass WaterInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onWaterChange(e.target.value);\n  }\n\n  render() {\n    return (\n        <FormControl className=\"waterInput\" variant=\"standard\" sx={{ m: 1, mt: 3, width: '25ch' }}>\n          <label for=\"water\">The amount of water in dl:</label>\n          <Input\n            sx={{ width: '10ch'}}\n            id=\"water\"\n            type=\"number\"\n            value={this.props.water}\n            onChange={this.handleChange}\n            endAdornment={<InputAdornment position=\"end\">dl</InputAdornment>}\n          />\n        </FormControl>\n    );\n  }\n}\n\nclass Measures extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onMeasureChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\" >The scoop used:</FormLabel>\n        <RadioGroup\n          row\n          aria-label=\"scoop\"\n          defaultValue={7}\n          name=\"radio-buttons-group\"\n          onChange={this.handleChange}\n      >\n          <FormControlLabel value={7} control={<Radio />} label=\"7g\" />\n          <FormControlLabel value={10} control={<Radio />} label=\"10g\" />\n          <FormControlLabel value={12} control={<Radio />} label=\"12g\" />\n          <FormControlLabel value={15} control={<Radio />} label=\"15g\" />\n        </RadioGroup>\n      </FormControl>\n    );\n  }\n}\n\nclass CalculationButton extends React.Component {\n  render() {\n    return (\n      <Button variant=\"contained\" onClick={this.props.onCalculationClick} >Calculate!</Button>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMeasureChange = this.handleMeasureChange.bind(this);\n    this.handleWaterChange = this.handleWaterChange.bind(this);\n    this.handleCalculationClick = this.handleCalculationClick.bind(this);\n    this.state = {measure: 7, water: '', calculation: 0};\n  }\n\n  handleMeasureChange(currentMeasure) {\n    this.setState({measure: currentMeasure});\n  }\n\n  handleWaterChange(currentWater) {\n    this.setState({water: currentWater});\n  }\n\n  handleCalculationClick() {\n    const answer = coffeeCalculation(this.state.measure, this.state.water);\n    this.setState({calculation: answer});\n  }\n\n  render() {\n    const water = this.state.water;\n    const calculation = this.state.calculation;\n\n    return (\n      <div className=\"app\">\n        <div className=\"card\">\n          <h1>Coffee calculator</h1>\n          <Measures onMeasureChange={this.handleMeasureChange} />\n          <WaterInput water={water} onWaterChange={this.handleWaterChange} />\n          <CalculationButton onCalculationClick={this.handleCalculationClick} />\n          <h1>You need {calculation} scoops of coffee!</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}